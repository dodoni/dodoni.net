//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dodoni.MathLibrary.ProbabilityTheory.MonteCarloEngine{
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class MklResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal MklResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Dodoni.MathLibrary.Basics.LowLevel.Native.RandomNumberGenerators.MklResources", typeof(MklResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generates normally distributed random number x thru the pair of uniformly distributed numbers u1 and u2 according to the formula x=sqrt(-ln(u1))*sin(2*Pi*u2)..
        /// </summary>
        internal static string Gaussian_BoxMuller {
            get {
                return ResourceManager.GetString("Gaussian_BoxMuller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generates pair of normally distributed random numbers x1 and x2 thru the pair of uniformly dustributed numbers u1 and u2 according to the formula x1=sqrt(-ln(u1))*sin(2*Pi*u2), x2=sqrt(-ln(u1))*cos(2*Pi*u2). This implementation correctly works with odd vector lengths..
        /// </summary>
        internal static string Gaussian_BoxMuller2 {
            get {
                return ResourceManager.GetString("Gaussian_BoxMuller2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the inverse cumulative distribution method..
        /// </summary>
        internal static string GaussianInverseCumulativeDistributionFunction {
            get {
                return ResourceManager.GetString("GaussianInverseCumulativeDistributionFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use a more accurate approach.
        /// </summary>
        internal static string Generation_Accurate {
            get {
                return ResourceManager.GetString("Generation_Accurate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use a standard approach..
        /// </summary>
        internal static string Generation_StandardApproach {
            get {
                return ResourceManager.GetString("Generation_StandardApproach", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Intels MKL 10.2.x, file name &quot;{0}&quot;..
        /// </summary>
        internal static string LibraryDescription {
            get {
                return ResourceManager.GetString("LibraryDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A 31-bit multiplicative congruential generator..
        /// </summary>
        internal static string MCG31 {
            get {
                return ResourceManager.GetString("MCG31", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A 59-bit multiplicative congruential generator..
        /// </summary>
        internal static string MCG59 {
            get {
                return ResourceManager.GetString("MCG59", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A combined multiple recursive generator with two components of order 3..
        /// </summary>
        internal static string MRG32K3A {
            get {
                return ResourceManager.GetString("MRG32K3A", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Mersenne Twister pseudorandom number generator..
        /// </summary>
        internal static string MT19937 {
            get {
                return ResourceManager.GetString("MT19937", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A set of 1024 Mersenne Twister pseudorandom number generators..
        /// </summary>
        internal static string MT2203 {
            get {
                return ResourceManager.GetString("MT2203", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A 32-bit Gray code-based generator producing low-discrepancy sequences..
        /// </summary>
        internal static string Niederreiter {
            get {
                return ResourceManager.GetString("Niederreiter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A generalized feedback shift register generator..
        /// </summary>
        internal static string R250 {
            get {
                return ResourceManager.GetString("R250", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A 32-bit Gray code-based generator producing low-discrepancy sequences..
        /// </summary>
        internal static string Sobol {
            get {
                return ResourceManager.GetString("Sobol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Distribution generators will produce numbers lying exactly within definitional domain for all values of distribution parameters..
        /// </summary>
        internal static string Uniform_Accurate {
            get {
                return ResourceManager.GetString("Uniform_Accurate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The standard method for generating uniform random numbers..
        /// </summary>
        internal static string Uniform_Standard {
            get {
                return ResourceManager.GetString("Uniform_Standard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A set of 273 Wichmann-Hill combined multiplicative congruential generators..
        /// </summary>
        internal static string WichmannHill {
            get {
                return ResourceManager.GetString("WichmannHill", resourceCulture);
            }
        }
    }
}
