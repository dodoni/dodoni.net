//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dodoni.Finance.CommonMarketUsages.BusinessDayConventions {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class BusinessDayConventionResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal BusinessDayConventionResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Dodoni.Finance.CommonMarketUsages.BusinessDayConventions.BusinessDayConventionRes" +
                            "ources", typeof(BusinessDayConventionResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dates are adjusted to land on the last day of the month..
        /// </summary>
        internal static string EndOfMonth {
            get {
                return ResourceManager.GetString("EndOfMonth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dates are adjusted according to the end-of-month. If the date falls on a weekend or holiday, the next good business day is used..
        /// </summary>
        internal static string EndOfMonthFollowing {
            get {
                return ResourceManager.GetString("EndOfMonthFollowing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dates are adjusted to land on the last day of the month. In a leap year, the end of month for February will be February 28..
        /// </summary>
        internal static string EndOfMonthIgnoreLeapYears {
            get {
                return ResourceManager.GetString("EndOfMonthIgnoreLeapYears", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End of month Ignore leap years.
        /// </summary>
        internal static string EndOfMonthIgnoreLeapYearsLongName {
            get {
                return ResourceManager.GetString("EndOfMonthIgnoreLeapYearsLongName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End of month (no adjustment).
        /// </summary>
        internal static string EndOfMonthLongName {
            get {
                return ResourceManager.GetString("EndOfMonthLongName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dates are adjusted to land on the last day of the month. If the date falls on a weekend or holiday, the previous good business day is used..
        /// </summary>
        internal static string EndOfMonthPreceding {
            get {
                return ResourceManager.GetString("EndOfMonthPreceding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End of month Preceding.
        /// </summary>
        internal static string EndOfMonthPrecedingLongName {
            get {
                return ResourceManager.GetString("EndOfMonthPrecedingLongName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dates are adjusted to land on the last day of the quarter..
        /// </summary>
        internal static string EndOfQuarter {
            get {
                return ResourceManager.GetString("EndOfQuarter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dates are adjusted to land on the last day of the quarter. If the date falls on a weekend or holiday, the following good business day is used..
        /// </summary>
        internal static string EndOfQuarterFollowing {
            get {
                return ResourceManager.GetString("EndOfQuarterFollowing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End of Quarter (no adjustment).
        /// </summary>
        internal static string EndOfQuarterlyLongName {
            get {
                return ResourceManager.GetString("EndOfQuarterlyLongName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dates are adjusted to land on the last day of the quarter. If the date falls on a weekend or holiday, the previous good business day is used..
        /// </summary>
        internal static string EndOfQuarterPreceding {
            get {
                return ResourceManager.GetString("EndOfQuarterPreceding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dates are adjusted to the next good business day..
        /// </summary>
        internal static string Following {
            get {
                return ResourceManager.GetString("Following", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Following.
        /// </summary>
        internal static string FollowingLongName {
            get {
                return ResourceManager.GetString("FollowingLongName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dates are adjusted to the next good business day unless that day falls in the next calendar month in which case the date is adjusted to the previous good business day..
        /// </summary>
        internal static string ModFollowing {
            get {
                return ResourceManager.GetString("ModFollowing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mod Following.
        /// </summary>
        internal static string ModFollowingLongName {
            get {
                return ResourceManager.GetString("ModFollowingLongName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No date adjustment will be take place..
        /// </summary>
        internal static string NoAdjustment {
            get {
                return ResourceManager.GetString("NoAdjustment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No adjustment.
        /// </summary>
        internal static string NoAdjustmentLongName {
            get {
                return ResourceManager.GetString("NoAdjustmentLongName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dates are adjusted to the previous good business day..
        /// </summary>
        internal static string Preceding {
            get {
                return ResourceManager.GetString("Preceding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dates are adjusted to the third wednesday of the month, without adjustments for weekends or holidays..
        /// </summary>
        internal static string ThirdWednesday {
            get {
                return ResourceManager.GetString("ThirdWednesday", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Third wednesday.
        /// </summary>
        internal static string ThirdWednesdayLongName {
            get {
                return ResourceManager.GetString("ThirdWednesdayLongName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dates are adjusted to two business day prior the third wednesday of the month..
        /// </summary>
        internal static string TwoBusinessDaysPriorThirdWednesday {
            get {
                return ResourceManager.GetString("TwoBusinessDaysPriorThirdWednesday", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Two business days prior third wednesday.
        /// </summary>
        internal static string TwoBusinessDaysPriorThirdWednesdayLongName {
            get {
                return ResourceManager.GetString("TwoBusinessDaysPriorThirdWednesdayLongName", resourceCulture);
            }
        }
    }
}
